<?php

/**
 * Implement hook_permission()
 */
function cb_master_permission() {
	return array(
		'cb_master add_master' => array(
			'title'	=> t('Add new Master'),
			'description' => t('Create a new Master Account')),
		'cb_master transfer_from' => array(
			'title'	=> t('Allow outgoing transfers'),
			'description' => t('User may transfer currency from an assigned Master Account')),
	);
}


class cbMaster {
	public $uid;
	public $name;
	public $master = true;
	public $groups;

	function __construct($cashbox) {
		$data = _cb_master_list();

		if (is_numeric($cashbox)) {
			if (isset($data[(int)$cashbox])) {
				$this->uid = (int)$cashbox;
				$this->name = $data[$cashbox];
				}       
			return;
		}       

		foreach ($data as $id=>$name) {
			if (!strcmp($cashbox, $name)) {
				$this->uid = $id;
				$this->name = $name;
				}       
			}
		}
}

/**
 * Implements hook_menu()
 */
function cb_master_menu() {
	$items = array();

	$items['admin/config/cashbox/master'] = array(
		'title'	=> 'Master Accounts Admin',
		'description' => 'Configure Cashbox Masters',
		'access arguments' => array('access administration pages'),
		'page callback' => 'cb_master_admin',
		'parent'	=> 'cashbox',
		'type' => MENU_NORMAL_ITEM,
		'file' => 'cb_master.admin.inc',
	);
	$items['admin/config/cashbox.master/new'] = array(
		'title'	=> 'Create New Master Account',
		'access arguments' => array('cb_master add_master'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('cb_master_dispatch'),
		'type' => MENU_CALLBACK,
		'file' => 'cb_master.admin.inc',
	);
 	$items['admin/config/cashbox.master/edit/%'] = array(
		'title' => 'Edit Master Account',
		'access arguments' => array('cb_master edit_master'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('cb_master_dispatch', 4),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'cb_master.admin.inc',
	);
	$items['admin/config/cashbox.master/delete/%'] = array(
		'title' => 'Delete Master Account',
		'access arguments' => array('cb_master delete_master'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('cb_master_delete', 4),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'cb_master.admin.inc',
	);
	$items['cashbox/master/callback/autocomplete'] = array(
		'title'	=> 'Callback for Master-Account names',
		'access arguments' => array('view keyword autocomplete'),
		'page callback'	=> '_cb_master_callback_autocomplete',
		'type' => MENU_CALLBACK,
	);

return $items;
}

/**
 * Check if user has a role which is associated to a Master-Account
 *
 * @param user
 * 	Loaded-User Object
 */
function _cb_master_check_access($book= false) {
	if (!db_table_exists('cashbox_masters')) 
		return false;

	global $user;

	$query = db_select('cashbox_masters', 'c')->fields('c', array('cbm_id', 'account_group'));	
		$condition = db_or();

	if ($book == false) {
		foreach ($user->roles as $rid=>$rname)
			$condition->condition('account_group', '%' . $rid . '%', 'LIKE');
	} else {
		$condition->condition('account_group', '%' . $book . '%', 'LIKE');
	}

	
	$result = $query->condition($condition)->execute()->fetchAll();

	foreach ($result as $match) {
		foreach (explode('|', $match->account_group) as $set)
			if (isset($user->roles[$set])) 
				return true;
	}

	return false;
}

function cb_master_get_available_accs(&$user) {
	$available_accs = array();
	$query = db_select('cashbox_masters', 'c')->fields('c', array('cbm_id', 'account_name', 'account_group', 'current_balance'));
	$condition = db_or();
	foreach ($user->roles as $rid=>$role) 
		$condition->condition('account_group', '%' . $rid . '%', 'LIKE');

	$result = $query->condition($condition)->execute();

	while ($row = $result->fetchAssoc()) {
		foreach (explode('|', $row['account_group']) as $ass_role)
			if (isset($user->roles[$ass_role])) {
				$available_accs[$row['cbm_id']] =  array('name' => $row['account_name'], 'balance' =>  $row['current_balance']);
			}
	}

	return $available_accs;

}

/**
 * Returns an associated array with cbm_id (the ID-Number of the Master account) and cbm_name (the human-readable name of the Master account)
 *
 */
function _cb_master_list() {
	$raw = db_query('SELECT cbm_id, account_name FROM cashbox_masters')->fetchAll();
	$masters = array();

	foreach ($raw as $line)
		$masters[$line->cbm_id] = $line->account_name;

	return $masters;
}

/**
 * Check if $para is a Master-Account
 */
function cb_master_is_master_by_id($para) {
	$data = _cb_master_list();
	if (isset($data[$para])) 
		return true;

	return false;
}

function cb_master_is_master($para) {
	$data = _cb_master_list();
	/* Loop through Master-Accounts until name matches */
	foreach ($data as $id => $cbm_name) {
		if (!strcmp($cbm_name, $para)) 
			return true;
	}

	return false;
}

/**
 * AJAX-Callback function that delivers ONLY a list of Master Accounts (as opposed to the one defined in cb_standard, which delivers both)
 *
 */
function _cb_master_callback_autocomplete($string = '') {
	if ($string) {
		$result = db_select('cashbox_masters')->fields('cashbox_masters', array('account_name'))->condition('account_name', db_like($string) . '%', 'LIKE')->range(0, 10)->execute();

		foreach ($result as $master) {
			$matches[$master->account_name] = '<strong>' . check_plain($master->account_name) . '</strong>';
		}

	}

        drupal_json_output($matches);
}
